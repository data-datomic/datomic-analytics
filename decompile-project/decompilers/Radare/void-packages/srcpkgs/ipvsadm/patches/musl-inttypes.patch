--- libipvs/ip_vs.h	2015-02-09 06:26:39.000000000 +0100
+++ libipvs/ip_vs.h	2015-10-12 08:48:09.291189591 +0200
@@ -6,6 +6,7 @@
 #ifndef _IP_VS_H
 #define _IP_VS_H
 
+#include <stdint.h>
 #include <netinet/in.h>
 #include <sys/socket.h>
 #include <arpa/inet.h>
@@ -118,10 +119,10 @@
  */
 struct ip_vs_service_kern {
 	/* virtual service addresses */
-	u_int16_t		protocol;
+	uint16_t		protocol;
 	__be32			addr;	/* virtual ip address */
 	__be16			port;
-	u_int32_t		fwmark;		/* firwall mark of service */
+	uint32_t		fwmark;		/* firwall mark of service */
 
 	/* virtual service options */
 	char			sched_name[IP_VS_SCHEDNAME_MAXLEN];
@@ -132,17 +133,17 @@
 
 struct ip_vs_service_user {
 	/* virtual service addresses */
-	u_int16_t		protocol;
+	uint16_t		protocol;
 	__be32			__addr_v4;	/* virtual ip address - internal use only */
 	__be16			port;
-	u_int32_t		fwmark;		/* firwall mark of service */
+	uint32_t		fwmark;		/* firwall mark of service */
 
 	/* virtual service options */
 	char			sched_name[IP_VS_SCHEDNAME_MAXLEN];
 	unsigned		flags;		/* virtual service flags */
 	unsigned		timeout;	/* persistent timeout in sec */
 	__be32			netmask;	/* persistent netmask */
-	u_int16_t		af;
+	uint16_t		af;
 	union nf_inet_addr	addr;
 	char			pe_name[IP_VS_PENAME_MAXLEN];
 };
@@ -157,8 +158,8 @@
 	int			weight;		/* destination weight */
 
 	/* thresholds for active connections */
-	u_int32_t		u_threshold;	/* upper threshold */
-	u_int32_t		l_threshold;	/* lower threshold */
+	uint32_t		u_threshold;	/* upper threshold */
+	uint32_t		l_threshold;	/* lower threshold */
 };
 
 struct ip_vs_dest_user {
@@ -171,9 +172,9 @@
 	int			weight;		/* destination weight */
 
 	/* thresholds for active connections */
-	u_int32_t		u_threshold;	/* upper threshold */
-	u_int32_t		l_threshold;	/* lower threshold */
-	u_int16_t		af;
+	uint32_t		u_threshold;	/* upper threshold */
+	uint32_t		l_threshold;	/* lower threshold */
+	uint16_t		af;
 	union nf_inet_addr	addr;
 };
 
@@ -212,10 +213,10 @@
 /* The argument to IP_VS_SO_GET_SERVICE */
 struct ip_vs_service_entry_kern {
 	/* which service: user fills in these */
-	u_int16_t		protocol;
+	uint16_t		protocol;
 	__be32			addr;	/* virtual address */
 	__be16			port;
-	u_int32_t		fwmark;		/* firwall mark of service */
+	uint32_t		fwmark;		/* firwall mark of service */
 
 	/* service options */
 	char			sched_name[IP_VS_SCHEDNAME_MAXLEN];
@@ -232,10 +233,10 @@
 
 struct ip_vs_service_entry {
 	/* which service: user fills in these */
-	u_int16_t		protocol;
+	uint16_t		protocol;
 	__be32			__addr_v4;	/* virtual address - internal use only*/
 	__be16			port;
-	u_int32_t		fwmark;		/* firwall mark of service */
+	uint32_t		fwmark;		/* firwall mark of service */
 
 	/* service options */
 	char			sched_name[IP_VS_SCHEDNAME_MAXLEN];
@@ -249,7 +250,7 @@
 	/* statistics */
 	struct ip_vs_stats_user stats;
 
-	u_int16_t		af;
+	uint16_t		af;
 	union nf_inet_addr	addr;
 	char			pe_name[IP_VS_PENAME_MAXLEN];
 
@@ -261,12 +262,12 @@
 	unsigned		conn_flags;	/* connection flags */
 	int			weight;		/* destination weight */
 
-	u_int32_t		u_threshold;	/* upper threshold */
-	u_int32_t		l_threshold;	/* lower threshold */
+	uint32_t		u_threshold;	/* upper threshold */
+	uint32_t		l_threshold;	/* lower threshold */
 
-	u_int32_t		activeconns;	/* active connections */
-	u_int32_t		inactconns;	/* inactive connections */
-	u_int32_t		persistconns;	/* persistent connections */
+	uint32_t		activeconns;	/* active connections */
+	uint32_t		inactconns;	/* inactive connections */
+	uint32_t		persistconns;	/* persistent connections */
 
 	/* statistics */
 	struct ip_vs_stats_user stats;
@@ -278,26 +279,26 @@
 	unsigned		conn_flags;	/* connection flags */
 	int			weight;		/* destination weight */
 
-	u_int32_t		u_threshold;	/* upper threshold */
-	u_int32_t		l_threshold;	/* lower threshold */
+	uint32_t		u_threshold;	/* upper threshold */
+	uint32_t		l_threshold;	/* lower threshold */
 
-	u_int32_t		activeconns;	/* active connections */
-	u_int32_t		inactconns;	/* inactive connections */
-	u_int32_t		persistconns;	/* persistent connections */
+	uint32_t		activeconns;	/* active connections */
+	uint32_t		inactconns;	/* inactive connections */
+	uint32_t		persistconns;	/* persistent connections */
 
 	/* statistics */
 	struct ip_vs_stats_user stats;
-	u_int16_t		af;
+	uint16_t		af;
 	union nf_inet_addr	addr;
 };
 
 /* The argument to IP_VS_SO_GET_DESTS */
 struct ip_vs_get_dests_kern {
 	/* which service: user fills in these */
-	u_int16_t		protocol;
+	uint16_t		protocol;
 	__be32			addr;	/* virtual address - internal use only */
 	__be16			port;
-	u_int32_t		fwmark;		/* firwall mark of service */
+	uint32_t		fwmark;		/* firwall mark of service */
 
 	/* number of real servers */
 	unsigned int		num_dests;
@@ -308,14 +309,14 @@
 
 struct ip_vs_get_dests {
 	/* which service: user fills in these */
-	u_int16_t		protocol;
+	uint16_t		protocol;
 	__be32			__addr_v4;	/* virtual address - internal use only */
 	__be16			port;
-	u_int32_t		fwmark;		/* firwall mark of service */
+	uint32_t		fwmark;		/* firwall mark of service */
 
 	/* number of real servers */
 	unsigned int		num_dests;
-	u_int16_t		af;
+	uint16_t		af;
 	union nf_inet_addr	addr;
 
 	/* the real servers */
