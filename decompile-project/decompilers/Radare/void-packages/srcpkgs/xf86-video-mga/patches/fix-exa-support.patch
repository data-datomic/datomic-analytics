MGA DDX: make it possible to find EXA support
Newer versions of the xserver stricter requirements on header order
which caused the configure tests for EXA support to erroneously fail.
Since XAA was already removed from an earlier version of xserver, the
configure failure meant no acceleration was possible. Patch configure
tests similar to r128.

Reviewed-by: Adam Jackson <ajax@redhat.com>

--- configure.ac
+++ configure.ac
@@ -155,8 +155,9 @@ if test "x$EXA" = xyes; then
 
     SAVE_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$CPPFLAGS $XORG_CFLAGS"
-    AC_CHECK_HEADER(exa.h,
-                   [have_exa_h="yes"], [have_exa_h="no"])
+    AC_CHECK_HEADERS(exa.h,
+                   [have_exa_h="yes"], [have_exa_h="no"],
+                   [#include "xorg-server.h"])
     CPPFLAGS="$SAVE_CPPFLAGS"
 else
     AC_MSG_RESULT(no)
@@ -167,6 +168,7 @@ CPPFLAGS="$CPPFLAGS $XORG_CFLAGS"
 if test "x$have_exa_h" = xyes; then
     AC_MSG_CHECKING([whether EXA version is at least 2.0.0])
     AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[
+#include "xorg-server.h"
 #include "exa.h"
 #if EXA_VERSION_MAJOR < 2
 #error OLD EXA!
