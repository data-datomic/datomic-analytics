# Template build file for 'cross-mipsel-linux-muslhf'
#
_binutils_version=2.24
_gcc_version=4.9.3
_musl_version=1.1.10
_linux_version=3.10.6

_triplet=mipsel-linux-muslhf
_fpuflags="--with-float=hard --with-fp"
_archflags="-march=mips32r2 -mhard-float"
_sysroot="/usr/${_triplet}"

pkgname=cross-${_triplet}
version=0.20
revision=3
short_desc="Cross toolchain for MIPS32r2 LE hardfloat target (musl)"
maintainer="Juan RP <xtraeme@voidlinux.eu>"
homepage="http://www.voidlinux.eu"
license="Public Domain"
distfiles="
 http://ftp.gnu.org/pub/gnu/binutils/binutils-${_binutils_version}.tar.bz2
 http://ftp.gnu.org/pub/gnu/gcc/gcc-${_gcc_version}/gcc-${_gcc_version}.tar.bz2
 http://www.kernel.org/pub/linux/kernel/v3.x/linux-${_linux_version}.tar.xz
 http://www.musl-libc.org/releases/musl-${_musl_version}.tar.gz"
checksum="
 e5e8c5be9664e7f7f96e0d09919110ab5ad597794f5b1809871177a0f0f14137
 2332b2a5a321b57508b9031354a8503af6fdfb868b8c1748d33028d100a8b67e
 ed4dfd9f56b7c82e9c71331bbf8d2ea01ddfddc1b6209bd3f3c8640aa24065cf
 45bbe9b1c7f7a0f743477af1e103b6889bfe4dd9815e16f6c89f6c90831c8b7c"

lib32disabled=yes
nocross=yes
nodebug=yes
create_wrksrc=yes

hostmakedepends="perl flex"
makedepends="zlib-devel gmp-devel mpfr-devel libmpc-devel"
nostrip_files="libgcc.a libgcov.a libgcc_eh.a"
depends="${pkgname}-libc-${version}_${revision}"

_apply_patch() {
	local pname="$(basename $1)"

	if [ ! -f ".${pname}_done" ]; then
		patch -Np1 -i ${1}
		touch .${pname}_done
	fi
}

_binutils_build() {
	[ -f ${wrksrc}/.binutils_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building cross binutils bootstrap\n"

	[ ! -d binutils-build ] && mkdir binutils-build
	cd binutils-build

	../binutils-${_binutils_version}/configure \
		--prefix=/usr --target=${_triplet} --with-sysroot=${_sysroot} \
		--disable-nls --disable-multilib --disable-werror \
		--disable-shared ${_fpuflags}

	make configure-host && make ${makejobs}
	make install

	touch ${wrksrc}/.binutils_build_done
}

_gcc_bootstrap() {
	[ -f ${wrksrc}/.gcc_bootstrap_done ] && return 0

	cd ${wrksrc}/gcc-${_gcc_version}
	_apply_patch ${FILESDIR}/gcc-4.9.2-musl.diff

	msg_normal "Building cross gcc bootstrap\n"

	[ ! -d ../gcc-bootstrap ] && mkdir ../gcc-bootstrap
	cd ../gcc-bootstrap

	CFLAGS="-O0 -g0" CXXFLAGS="-O0 -g0" \
		../gcc-${_gcc_version}/configure --prefix=/usr \
		--target=${_triplet} --with-sysroot=${_sysroot} --with-newlib \
		--enable-languages=c --with-newlib --disable-libssp --disable-nls \
		--disable-libquadmath --disable-threads --disable-decimal-float \
		--disable-shared --disable-libmudflap --disable-libgomp \
		--disable-libatomic ${_fpuflags}

	make ${makejobs}
	make install

	touch ${wrksrc}/.gcc_bootstrap_done
}

_linux_headers() {
	[ -f ${wrksrc}/.linux_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building Linux API headers\n"

	cd linux-${_linux_version}

	make ARCH=mips headers_check
	make ARCH=mips INSTALL_HDR_PATH=${_sysroot}/usr headers_install

	touch ${wrksrc}/.linux_build_done
}

_musl_build() {
	[ -f ${wrksrc}/.musl_build_done ] && return 0

	cd ${wrksrc}/musl-${_musl_version}
	msg_normal "Building cross musl libc\n"

	CC="${_triplet}-gcc" CFLAGS="-Os -pipe ${_archflags}" \
		./configure --prefix=/usr \

	make ${makejobs}
	make DESTDIR=${_sysroot} install

	touch ${wrksrc}/.musl_build_done
}

_gcc_build() {
	[ -f ${wrksrc}/.gcc_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building cross gcc final\n"

	[ ! -d gcc-build ] && mkdir gcc-build
	cd gcc-build

	../gcc-${_gcc_version}/configure \
		--target=${_triplet} --with-sysroot=${_sysroot} --prefix=/usr \
		--libexecdir=/usr/lib --enable-languages=c,c++,lto \
		--enable-lto --disable-libsanitizer \
		--disable-multilib --disable-nls --disable-libquadmath \
		--disable-libmudflap --enable-shared ${_fpuflags}

	make ${makejobs}

	touch ${wrksrc}/.gcc_build_done
}

do_build() {
	# Ensure we use sane environment
	unset CC CXX CPP LD AS AR RANLIB OBJDUMP READELF NM
	unset CFLAGS CXXFLAGS CPPFLAGS LDFLAGS
	export CFLAGS="-Os -pipe" CXXFLAGS="-Os -pipe"

	for f in include lib libexec bin sbin; do
		if [ ! -d ${_sysroot}/usr/${f} ]; then
			mkdir -p ${_sysroot}/usr/${f}
		fi
		if [ ! -h ${_sysroot}/${f} ]; then
			ln -sfr ${_sysroot}/usr/${f} ${_sysroot}/${f}
		fi
	done

	_binutils_build
	_gcc_bootstrap
	_linux_headers
	_musl_build
	_gcc_build
}

do_install() {
	for f in include lib libexec bin sbin; do
		if [ ! -d ${DESTDIR}/${_sysroot}/usr/${f} ]; then
			mkdir -p ${DESTDIR}/${_sysroot}/usr/${f}
		fi
		if [ ! -h ${DESTDIR}/${_sysroot}/${f} ]; then
			ln -sfr ${DESTDIR}/${_sysroot}/usr/${f} \
				${DESTDIR}/${_sysroot}/${f}
		fi
	done

	# install linux API headers
	cd ${wrksrc}/linux-${_linux_version}
	make ARCH=mips INSTALL_HDR_PATH=${DESTDIR}/${_sysroot}/usr headers_install
	rm -f $(find ${DESTDIR}/${_sysroot}/usr/include -name .install -or -name ..install.cmd)
	rm -rf ${DESTDIR}/${_sysroot}/usr/include/drm

	# install cross binutils
	cd ${wrksrc}/binutils-build
	make DESTDIR=${DESTDIR} install

	# install cross gcc
	cd ${wrksrc}/gcc-build
	make DESTDIR=${DESTDIR} install

	# install musl libc for target
	cd ${wrksrc}/musl-${_musl_version}
	make DESTDIR=${DESTDIR}/${_sysroot} install

	# Remove useless headers.
	rm -rf ${DESTDIR}/usr/lib/gcc/${_triplet}/*/include-fixed

	# Make ld-musl.so symlinks relative.
	ln -sf libc.so ${DESTDIR}/${_sysroot}/usr/lib/ld-musl-mipsel.so.1

	# Remove unnecessary stuff
	rm -f ${DESTDIR}/usr/lib*/libiberty.a
	rm -rf ${DESTDIR}/usr/share
	rm -rf ${DESTDIR}/${_sysroot}/{etc,var}
	rm -rf ${DESTDIR}/${_sysroot}/usr/{sbin,share,libexec}
	rm -f ${DESTDIR}/${_sysroot}/libexec
	rm -f ${DESTDIR}/${_sysroot}/lib/*.py
	rm -f ${DESTDIR}/${_sysroot}/{bin,sbin,lib}
}

cross-mipsel-linux-muslhf-libc_package() {
	short_desc+=" - libc files"
	noarch=yes
	noverifyrdeps=yes
	noshlibprovides=yes
	pkg_install() {
		vmove ${_sysroot}
	}
}
