# Template file for 'v8'
pkgname=v8-3.16
_sonamever="3.16"
version=${_sonamever}.8.1
revision=3
hostmakedepends="python"
makedepends="readline-devel"
short_desc="V8 JavaScript Engine (v3.16)"
maintainer="Enno Boland <gottox@voidlinux.eu>"
homepage="http://code.google.com/p/v8/"
license="BSD"
conflicts="v8>=3.20"
distfiles="http://commondatastorage.googleapis.com/chromium-browser-official/v8-${version}.tar.bz2"
checksum=b99ffa913e8f00b8fdb3b58cadf2addbbf60549a5be8d12a6c0b7095a36ac7e0
wrksrc="v8-$version"

case "${XBPS_TARGET_MACHINE}" in
	x86_64) _target="x64";;
	i686) _target="ia32";;
	arm*) _target="arm"; _opts="hardfp=on";;
	*) msg_error "$pkgver: unknown target architecture!\n" ;;
esac

do_build() {
	if [ $_target = 'arm' ]; then
		sed -e "s/m32flag':.*/m32flag':'',/" -i build/common.gypi
	fi

	LINK=${CXX} make ${makejobs} ${_target} $_opts i18nsupport=off \
		werror=no library=shared soname_version=${_sonamever} \
		console=readline disassembler=on snapshot=off \
		CXX.host=${CXX} CXX.link=${CXX} LINK.target=${CXX} \
		BUILTYPE=Release
}
do_install() {
	vinstall out/$_target.release/d8 755 usr/bin
	vinstall out/$_target.release/lib.target/libv8.so.${_sonamever} 755 usr/lib

	vmkdir usr/include
	vcopy 'include/v8*.h' usr/include

	ln -sfr ${DESTDIR}/usr/lib/libv8.so.${_sonamever} ${DESTDIR}/usr/lib/libv8.so
}

v8-3.16-devel_package() {
	depends="libv8-3.16-${version}_${revision}"
	short_desc+=" - development files"
	conflicts="v8-devel>=3.20"
	pkg_install() {
		vmove usr/include
		vmove usr/lib/libv8.so
	}
}
libv8-3.16_package() {
	short_desc+=" - runtime library"
	pkg_install() {
		vmove usr/lib/libv8.so.${_sonamever}
	}
}
