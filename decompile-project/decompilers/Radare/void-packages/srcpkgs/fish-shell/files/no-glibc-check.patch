Remove configure tests which fail when cross building.

--- configure.ac.orig	2015-09-09 21:49:50.021403972 +0200
+++ configure.ac	2015-09-09 21:50:04.759403929 +0200
@@ -226,49 +226,6 @@
 esac
 
 #
-# If we are compiling against glibc, set some flags to work around
-# some rather stupid attempts to hide prototypes for *wprintf
-# functions, as well as prototypes of various gnu extensions.
-#
-
-AC_MSG_CHECKING([if we are compiling against glibc])
-AC_RUN_IFELSE(
-  [
-    AC_LANG_PROGRAM(
-      [
-        #include <stdlib.h>
-        #ifdef __GLIBC__
-        #define STATUS 0
-        #else
-        #define STATUS 1
-        #endif
-      ],
-      [
-        return STATUS;
-      ]
-    )
-  ],
-  [glibc=yes],
-  [glibc=no]
-)
-
-if test "$glibc" = yes; then
-  AC_MSG_RESULT(yes)
-
-  #
-  # This gives us access to prototypes for gnu extensions and C99
-  # functions if we are compiling agains glibc. All GNU extensions
-  # that are used must have a fallback implementation available in
-  # fallback.h, in order to keep fish working on non-gnu platforms.
-  #
-
-  CXXFLAGS="$CXXFLAGS -D_GNU_SOURCE=1 -D_ISO99_SOURCE=1"
-else
-  AC_MSG_RESULT(no)
-fi
-
-
-#
 # Test cpu for special handling of ppc
 #
 # This is used to skip use of tputs on ppc systems, since it seemed to
@@ -537,44 +494,6 @@
 
 
 #
-# Check if realpath accepts null for its second argument
-#
-
-AC_MSG_CHECKING([if realpath accepts null for its second argument])
-AC_RUN_IFELSE(
-  [
-    AC_LANG_PROGRAM(
-      [
-        #include <limits.h>
-        #include <errno.h>
-        #include <stdlib.h>
-      ],
-      [
-        int status;
-        char *res;
-        res = realpath( "somefile", 0 );
-        status = !(res != 0 || errno == ENOENT);
-        exit( status );
-      ]
-    )
-  ],
-  [have_realpath_null=yes],
-  [have_realpath_null=no]
-)
-
-if test "$have_realpath_null" = yes; then
-  AC_MSG_RESULT(yes)
-  AC_DEFINE(
-    [HAVE_REALPATH_NULL],
-    [1],
-    [Define to 1 if realpath accepts null for its second argument.]
-  )
-else
-  AC_MSG_RESULT(no)
-fi
-
-
-#
 # Check if struct winsize and TIOCGWINSZ exist
 #
 
@@ -607,41 +526,6 @@
 )
 
 
-#
-# If we have a fwprintf in libc, test that it actually works. As of
-# March 2006, it is broken under DragonFly BSD.
-#
-
-if test "$ac_cv_func_fwprintf" = yes; then
-
-  AC_MSG_CHECKING([if fwprintf is broken])
-  AC_RUN_IFELSE(
-    [
-      AC_LANG_PROGRAM(
-        [
-          #include <stdlib.h>
-          #include <stdio.h>
-          #include <locale.h>
-          #include <wchar.h>
-        ],
-        [
-          setlocale( LC_ALL, "" );
-          fwprintf( stderr, L"%ls%ls", L"", L"fish:" );
-        ]
-      )
-    ],
-    [
-      AC_MSG_RESULT(no)
-    ],
-    [
-      AC_MSG_RESULT([yes])
-      AC_DEFINE([HAVE_BROKEN_FWPRINTF], [1], [Define to 1 one if the implemented fwprintf is broken])
-    ]
-  )
-
-fi
-
-
 # Check for _nl_msg_cat_cntr symbol
 AC_MSG_CHECKING([for _nl_msg_cat_cntr symbol])
 AC_TRY_LINK(
