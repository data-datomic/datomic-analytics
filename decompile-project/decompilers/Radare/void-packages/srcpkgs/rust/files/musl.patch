--- src/llvm/include/llvm/Analysis/TargetLibraryInfo.h	2015-08-04 21:30:36.000000000 +0200
+++ src/llvm/include/llvm/Analysis/TargetLibraryInfo.h	2015-08-12 14:34:21.732793886 +0200
@@ -18,6 +18,15 @@
 #include "llvm/IR/Module.h"
 #include "llvm/Pass.h"
 
+#undef fopen64
+#undef fseeko64
+#undef fstat64
+#undef fstatvfs64
+#undef ftello64
+#undef lstat64
+#undef stat64
+#undef tmpfile64
+
 namespace llvm {
 /// VecDesc - Describes a possible vectorization of a function.
 /// Function 'VectorFnName' is equivalent to 'ScalarFnName' vectorized
--- src/llvm/lib/Analysis/TargetLibraryInfo.cpp	2015-08-04 21:30:36.000000000 +0200
+++ src/llvm/lib/Analysis/TargetLibraryInfo.cpp	2015-08-12 14:34:58.542597686 +0200
@@ -336,14 +336,15 @@
   }
 
   // The following functions are available on at least Linux:
-  if (!T.isOSLinux()) {
+  if (!T.isOSLinux())
+    TLI.setUnavailable(LibFunc::memalign);
+  if (1 /*!T.isGlibc()*/) {
     TLI.setUnavailable(LibFunc::dunder_strdup);
     TLI.setUnavailable(LibFunc::dunder_strtok_r);
     TLI.setUnavailable(LibFunc::dunder_isoc99_scanf);
     TLI.setUnavailable(LibFunc::dunder_isoc99_sscanf);
     TLI.setUnavailable(LibFunc::under_IO_getc);
     TLI.setUnavailable(LibFunc::under_IO_putc);
-    TLI.setUnavailable(LibFunc::memalign);
     TLI.setUnavailable(LibFunc::fopen64);
     TLI.setUnavailable(LibFunc::fseeko64);
     TLI.setUnavailable(LibFunc::fstat64);
--- src/llvm/lib/Support/DynamicLibrary.cpp	2015-08-04 21:30:36.000000000 +0200
+++ src/llvm/lib/Support/DynamicLibrary.cpp	2015-08-12 13:41:14.397917475 +0200
@@ -138,7 +138,7 @@
 
 // This macro returns the address of a well-known, explicit symbol
 #define EXPLICIT_SYMBOL(SYM) \
-   if (!strcmp(symbolName, #SYM)) return &SYM
+   if (!strcmp(symbolName, #SYM)) return (void *) &SYM
 
 // On linux we have a weird situation. The stderr/out/in symbols are both
 // macros and global variables because of standards requirements. So, we
--- src/llvm/utils/unittest/googletest/src/gtest.cc	2015-08-04 21:30:48.000000000 +0200
+++ src/llvm/utils/unittest/googletest/src/gtest.cc	2015-08-12 13:41:36.965795116 +0200
@@ -120,6 +120,7 @@
 
 #if GTEST_CAN_STREAM_RESULTS_
 # include <arpa/inet.h>  // NOLINT
+# include <sys/socket.h>  // NOLINT
 # include <netdb.h>  // NOLINT
 #endif
 
