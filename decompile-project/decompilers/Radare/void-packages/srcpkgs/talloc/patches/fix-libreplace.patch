diff --git lib/replace/replace.c lib/replace/replace.c
index 2a9ca3e..ea02753 100644
--- lib/replace/replace.c
+++ lib/replace/replace.c
@@ -508,28 +508,6 @@ long long int rep_strtoll(const char *str, char **endptr, int base)
 # error "You need a strtoll function"
 #endif
 }
-#else
-#ifdef HAVE_BSD_STRTOLL
-#ifdef HAVE_STRTOQ
-long long int rep_strtoll(const char *str, char **endptr, int base)
-{
-	long long int nb = strtoq(str, endptr, base);
-	/* In linux EINVAL is only returned if base is not ok */
-	if (errno == EINVAL) {
-		if (base == 0 || (base >1 && base <37)) {
-			/* Base was ok so it's because we were not
-			 * able to make the convertion.
-			 * Let's reset errno.
-			 */
-			errno = 0;
-		}
-	}
-	return nb;
-}
-#else
-#error "You need the strtoq function"
-#endif /* HAVE_STRTOQ */
-#endif /* HAVE_BSD_STRTOLL */
 #endif /* HAVE_STRTOLL */
 
 
@@ -546,28 +524,6 @@ unsigned long long int rep_strtoull(const char *str, char **endptr, int base)
 # error "You need a strtoull function"
 #endif
 }
-#else
-#ifdef HAVE_BSD_STRTOLL
-#ifdef HAVE_STRTOUQ
-unsigned long long int rep_strtoull(const char *str, char **endptr, int base)
-{
-	unsigned long long int nb = strtouq(str, endptr, base);
-	/* In linux EINVAL is only returned if base is not ok */
-	if (errno == EINVAL) {
-		if (base == 0 || (base >1 && base <37)) {
-			/* Base was ok so it's because we were not
-			 * able to make the convertion.
-			 * Let's reset errno.
-			 */
-			errno = 0;
-		}
-	}
-	return nb;
-}
-#else
-#error "You need the strtouq function"
-#endif /* HAVE_STRTOUQ */
-#endif /* HAVE_BSD_STRTOLL */
 #endif /* HAVE_STRTOULL */
 
 #ifndef HAVE_SETENV
diff --git lib/replace/replace.h lib/replace/replace.h
index 3ff4e36..eb852f5 100644
--- lib/replace/replace.h
+++ lib/replace/replace.h
@@ -359,21 +359,11 @@ char *rep_strtok_r(char *s, const char *delim, char **save_ptr);
 #ifndef HAVE_STRTOLL
 #define strtoll rep_strtoll
 long long int rep_strtoll(const char *str, char **endptr, int base);
-#else
-#ifdef HAVE_BSD_STRTOLL
-#define strtoll rep_strtoll
-long long int rep_strtoll(const char *str, char **endptr, int base);
-#endif
 #endif
 
 #ifndef HAVE_STRTOULL
 #define strtoull rep_strtoull
 unsigned long long int rep_strtoull(const char *str, char **endptr, int base);
-#else
-#ifdef HAVE_BSD_STRTOLL /* yes, it's not HAVE_BSD_STRTOULL */
-#define strtoull rep_strtoull
-unsigned long long int rep_strtoull(const char *str, char **endptr, int base);
-#endif
 #endif
 
 #ifndef HAVE_FTRUNCATE
