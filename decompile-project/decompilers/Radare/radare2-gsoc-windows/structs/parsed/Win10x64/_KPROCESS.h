
/* ActiveProcessors */
#define	AutoAlignment	0x00000001
#define	DisableBoost	0x00000002
#define	DisableQuantum	0x00000004
#define	DeepFreeze	0x00000008
#define	TimerVirtualization	0x00000010
#define	CheckStackExtents	0x00000020
#define	SpareFlags0	0x000000C0
#define	ActiveGroupsMask	0x0FFFFF00
#define	ReservedFlags	0xF0000000

struct _KPROCESS {
	struct _DISPATCHER_HEADER	Header;
	struct _LIST_ENTRY	ProfileListHead;
	uint64_t	DirectoryTableBase;
	struct _LIST_ENTRY	ThreadListHead;
	uint32_t	ProcessLock;
	uint32_t	Spare0;
	uint64_t	DeepFreezeStartTime;
	struct _KAFFINITY_EX	Affinity;
	struct _LIST_ENTRY	ReadyListHead;
	struct _SINGLE_LIST_ENTRY	SwapListEntry;
	struct _KAFFINITY_EX	ActiveProcessors;
	int32_t	ProcessFlags;
	struct Char	BasePriority;
	struct Char	QuantumReset;
	uint8_t	Visited;
	struct _KEXECUTE_OPTIONS	Flags;
	uint32_t	ThreadSeed[20];
	uint8_t	__padding0__;
	uint8_t	__padding1__;
	uint8_t	__padding2__;
	uint8_t	__padding3__;
	uint8_t	__padding4__;
	uint8_t	__padding5__;
	uint8_t	__padding6__;
	uint8_t	__padding7__;
	uint8_t	__padding8__;
	uint8_t	__padding9__;
	uint8_t	__padding10__;
	uint8_t	__padding11__;
	uint8_t	__padding12__;
	uint8_t	__padding13__;
	uint8_t	__padding14__;
	uint8_t	__padding15__;
	uint8_t	__padding16__;
	uint8_t	__padding17__;
	uint8_t	__padding18__;
	uint8_t	__padding19__;
	uint8_t	__padding20__;
	uint8_t	__padding21__;
	uint8_t	__padding22__;
	uint8_t	__padding23__;
	uint8_t	__padding24__;
	uint8_t	__padding25__;
	uint8_t	__padding26__;
	uint8_t	__padding27__;
	uint8_t	__padding28__;
	uint8_t	__padding29__;
	uint8_t	__padding30__;
	uint8_t	__padding31__;
	uint8_t	__padding32__;
	uint8_t	__padding33__;
	uint8_t	__padding34__;
	uint8_t	__padding35__;
	uint8_t	__padding36__;
	uint8_t	__padding37__;
	uint8_t	__padding38__;
	uint8_t	__padding39__;
	uint8_t	__padding40__;
	uint8_t	__padding41__;
	uint8_t	__padding42__;
	uint8_t	__padding43__;
	uint8_t	__padding44__;
	uint8_t	__padding45__;
	uint8_t	__padding46__;
	uint8_t	__padding47__;
	uint8_t	__padding48__;
	uint8_t	__padding49__;
	uint8_t	__padding50__;
	uint8_t	__padding51__;
	uint8_t	__padding52__;
	uint8_t	__padding53__;
	uint8_t	__padding54__;
	uint8_t	__padding55__;
	uint8_t	__padding56__;
	uint8_t	__padding57__;
	uint8_t	__padding58__;
	uint8_t	__padding59__;
	uint8_t	__padding60__;
	uint8_t	__padding61__;
	uint8_t	__padding62__;
	uint8_t	__padding63__;
	uint8_t	__padding64__;
	uint8_t	__padding65__;
	uint8_t	__padding66__;
	uint8_t	__padding67__;
	uint8_t	__padding68__;
	uint8_t	__padding69__;
	uint8_t	__padding70__;
	uint8_t	__padding71__;
	uint8_t	__padding72__;
	uint8_t	__padding73__;
	uint8_t	__padding74__;
	uint8_t	__padding75__;
	uint16_t	IdealNode[20];
	uint8_t	__padding0__;
	uint8_t	__padding1__;
	uint8_t	__padding2__;
	uint8_t	__padding3__;
	uint8_t	__padding4__;
	uint8_t	__padding5__;
	uint8_t	__padding6__;
	uint8_t	__padding7__;
	uint8_t	__padding8__;
	uint8_t	__padding9__;
	uint8_t	__padding10__;
	uint8_t	__padding11__;
	uint8_t	__padding12__;
	uint8_t	__padding13__;
	uint8_t	__padding14__;
	uint8_t	__padding15__;
	uint8_t	__padding16__;
	uint8_t	__padding17__;
	uint8_t	__padding18__;
	uint8_t	__padding19__;
	uint8_t	__padding20__;
	uint8_t	__padding21__;
	uint8_t	__padding22__;
	uint8_t	__padding23__;
	uint8_t	__padding24__;
	uint8_t	__padding25__;
	uint8_t	__padding26__;
	uint8_t	__padding27__;
	uint8_t	__padding28__;
	uint8_t	__padding29__;
	uint8_t	__padding30__;
	uint8_t	__padding31__;
	uint8_t	__padding32__;
	uint8_t	__padding33__;
	uint8_t	__padding34__;
	uint8_t	__padding35__;
	uint8_t	__padding36__;
	uint8_t	__padding37__;
	uint16_t	IdealGlobalNode;
	uint16_t	Spare1;
	struct _KSTACK_COUNT	StackCount;
	struct _LIST_ENTRY	ProcessListEntry;
	uint64_t	CycleTime;
	uint64_t	ContextSwitches;
	struct _KSCHEDULING_GROUP	*SchedulingGroup;
	uint32_t	FreezeCount;
	uint32_t	KernelTime;
	uint32_t	UserTime;
	uint16_t	LdtFreeSelectorHint;
	uint16_t	LdtTableLength;
	struct _KGDTENTRY64	LdtSystemDescriptor;
	void	*LdtBaseAddress;
	struct _FAST_MUTEX	LdtProcessLock;
	void	*InstrumentationCallback;
	uint64_t	SecurePid;
}__attribute__((packed));
