{{=<% %>=}}
---
- hosts: app
  sudo: true
  vars_files:
    - vars/app

  tasks:
  - name: Create the project directory.
    file: state=directory path={{project_root}}

  - name: Install required system packages.
    apt: pkg={{item}} state=installed update-cache=yes
    with_items: "{{system_packages}}"

  - name: Get leiningen
    get_url: url=https://raw.github.com/technomancy/leiningen/stable/bin/lein dest="{{lein_dir}}"

  - name: Leiningen permissions
    file: path={{lein_dir}} mode=0755

  - name: Download project dependencies
    shell: su - vagrant -c 'cd /var/projects/{{project_name}}; lein deps'

  - name: Upload nREPL upstart config file
    copy: src=files/nrepl-upstart.conf dest=/etc/init/nrepl.conf

  - name: Start nREPL server
    service: name=nrepl state=started

  - name: Make app log directory
    file: state=directory path=/var/log/{{project_name}} owner=vagrant group=vagrant

<%#datomic?%>
- hosts: database
  sudo: true
  vars_files:
    - vars/database

  tasks:
  - name: Create datomic user.
    user: name=datomic state=present

  - name: Create datomic data directory
    file: state=directory path={{datomic_data_dir}} owner=datomic group=datomic

  - name: Make datomic log directory
    file: state=directory path=/var/log/datomic owner=datomic group=datomic

  - name: Check datomic installation
    command: "ls {{datomic_dir}}/{{datomic_filename}}"
    register: datomic_exists
    ignore_errors: true

  - name: Create datomic directory
    file: state=directory path={{datomic_dir}} owner=datomic group=datomic
    when: datomic_exists|failed

  - name: Download datomic
    get_url: url=https://my.datomic.com/downloads/free/{{datomic_version}} dest={{datomic_dir}}
    when: datomic_exists|failed

  - name: Unpack datomic
    command: chdir={{datomic_dir}} unzip {{datomic_filename}}.zip
    when: datomic_exists|failed

  - name: datomic dir permissions
    shell: chown -R datomic:datomic {{datomic_dir}}/{{datomic_filename}}

  - name: Upload datomic properties file
    copy: src=files/datomic-transactor.properties dest={{datomic_dir}}/transactor.properties

  - name: Upload datomic upstart config file
    copy: src=files/datomic-upstart.conf dest=/etc/init/datomic.conf

  - name: Link datomic
    file: src={{datomic_dir}}/{{datomic_filename}}
          dest={{datomic_dir}}/runtime
          owner=datomic
          group=datomic
          state=link
    when: datomic_exists|failed

  - name: ensure datomic is running
    service: name=datomic state=started
<%/datomic?%>
<%={{ }}=%>
