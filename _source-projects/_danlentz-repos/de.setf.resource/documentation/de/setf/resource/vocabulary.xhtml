<?xml version='1.0' standalone='no' ?><!DOCTYPE xhtml PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns='http://www.w3.org/1999/xhtml'>  <head>   <meta name='date' content='20100625T034721' />       <meta http-equiv='Content-Type' content='text/xhtml;charset=iso-8859-1' />       <link href='../../../documentation.css' rel='stylesheet' type='text/css' />       <title>FILE: vocabulary    </title>   </head><body><div class='file'><div class='type'>File</div><div class='name'>vocabulary.lisp</div><hr /><div class='indexHeading'><span><a href='#index_E'>E</a> </span><span><a href='#index_F'>F</a> </span><span><a href='#index_R'>R</a> </span><span><a href='#index_S'>S</a> </span><span><a href='#index_V'>V</a> </span></div><hr /><div class='documentation'>This file supports RDF vocabularies for the `de.setf.resource` CLOS linked data library.</div><div class='documentation'>The vocabulary operators map type/class models between CLOS and RDF schemas. The CLOS representation comprises the namce. the class instances, and property accessors. A representation of a vocabulary can be transliterated from the RDF representation retrieved from a <a href='statement.xhtml#triple' class='reference function'>triple</a> store or it can be defined in a lisp source file. The vocabulary also includes an optional identifier map to specify the relations between Lisp symbols and RDF <a href='interface.xhtml#uri' class='reference function'>uri</a>. Note, on the <a href='interface.xhtml#subject' class='reference function'>subject</a> of 'canonical' identifiers and the vocabulary namespace names: The standard XML Schema namespaces are 'http://www.w3.org/2001/XMLSchema' and 'http://www.w3.org/2001/XMLSchema-datatypes'[1], depending on whether the circumstances involve schema aspects inaddition to the datatype terms. In their original useage, these corresponded to the prefixes 'xs' and 'xsd', respectively. On the other hand, standard prefix binding which appears in RDF specifications is 'xsd=http://www.w3.org/2001/XMLSchema#'[2]. That is 'xsd' for the fulls schema namespace and with a fragment character. The original OWL recommendation even avails itself of both approaches. On one hand, the general discussion of namespaces demonstrates the presence of fragment separator characters in the vocabulary namespace[3], but on the other, the discussion of extensions[4], suggests that fragements are themselves integral entites which _include_ the separator character. While this may be just the result of editorial oversight, it demonstrates that the operators can perform neither a strict url merge, not a simple string catenation if they are to produce the expected results from the widely varies input arguments. The 2009 versions reiterate the practice, to the use different encodings to designate each given identifier[5],[6]. whatever. In the exmple of the SKOS RDF schema,[7] the practice explicitly indicateing fragments appears again. of Given these precedents, a <a href='#vocabulary' class='reference class'>vocabulary</a> permits to specify explicit correspondences between packages and vocabulary namespaces as well as between specific individual identifers. --- [1]: http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#namespaces [2]: http://www.w3.org/TR/2004/REC-rdf-mt-20040210/ [3]: http://www.w3.org/TR/2004/REC-owl-guide-20040210/#Namespaces [4]: http://www.w3.org/TR/2004/REC-owl-guide-20040210/#DefiningSimpleClasses [5]: http://www.w3.org/TR/2009/REC-owl2-quick-reference-20091027/#Names.2C_Prefixes.2C_and_Notation [6]: http://www.w3.org/TR/2009/CR-xmlschema11-1-20090430/#nss_langids [7]: http://www.w3.org/2009/08/skos-reference/skos.rdf</div><hr /><div class='indexLetter'><a name='index_E'>E</a></div><div class='method' name='ensure-vocabulary' ID='ensure-vocabulary'><div class='type'>Method</div><div class='name'><a href='interface.xhtml#ensure-vocabulary'>ensure-vocabulary</a>   </div><div class='parameters'> (context t) (vocabulary vocabulary) &amp;key</div><div class='documentation'>Given a vocabulary for an anomolous context, return the <a href='#vocabulary' class='reference class'>vocabulary</a> as-is.</div></div><hr /><div class='indexLetter'><a name='index_F'>F</a></div><div class='method' name='(setf find-class)' ID='(setf find-class)'><div class='type'>Method</div><div class='name'><a href='../../../../../../../../#(setf find-class)'>(setf find-class)</a>   </div><div class='parameters'> (definition t) (vocabulary vocabulary) (name symbol)</div><div class='documentation'></div></div><hr /><div class='method' name='find-class' ID='find-class'><div class='type'>Method</div><div class='name'><a href='interface.xhtml#find-class'>find-class</a>   </div><div class='parameters'> (vocabulary vocabulary) (name symbol) &amp;key (error-p t)</div><div class='documentation'></div></div><hr /><div class='indexLetter'><a name='index_R'>R</a></div><div class='function'><a name='repository-namespace-bindings'><div class='type'>Generic Function</div><div class='name'>repository-namespace-bindings</div><div class='parameters'> source </div></a><div class='documentation'>Returns an a-list of (prefix . namespace-uri) bindings.</div></div><hr /><div class='indexLetter'><a name='index_S'>S</a></div><div class='method' name='setf-vocabulary-uri' ID='setf-vocabulary-uri'><div class='type'>Method</div><div class='name'>setf-vocabulary-uri   </div><div class='parameters'> (uri string) (object vocabulary)</div><div class='documentation'></div></div><hr /><div class='method' name='shared-initialize' ID='shared-initialize'><div class='type'>Method</div><div class='name'>shared-initialize   </div><div class='parameters'> (instance vocabulary) (slots t) &amp;key identifier-map identifiers uri (resource-uri uri) (name nil n-s)</div><div class='documentation'>When (re)initializing combine use the possible argument for uri, a list of identifiers, and/or an identifier-map a-list arguments to construct and set the vocabulary's map to a (symbol . uri-namestring) alist. NB. the <a href='#vocabulary' class='reference class'>vocabulary</a> URI and the identifers package need not have the same name. </div></div><hr /><div class='indexLetter'><a name='index_V'>V</a></div><div class='class'><a name='vocabulary'><div class='type'>Class</div><div class='name'>vocabulary</div><div class='superclasses'>( standard-object )</div></a><div class='documentation'>A vocabulary represents an RDF schema in Lisp terms and CLOS class definitions. It comprises a set of class definitions, which implicitly define the schema's predicates, and an optional map between Lisp names and the schema's URI. A <a href='#vocabulary' class='reference class'>vocabulary</a> can be constructed based on an RDF representation as mediated by a <a href='../../../../../../../../#triple' class='reference class'>triple</a> store, or it can be cached as an explicit definition in the file system.</div><div class='slots'><div class='slot'><div class='name'><a name='#name'>name</a></div>[t]</div><div class='slot'><div class='name'><a name='#uri'>uri</a></div>[string]<div class='documentation'>The vocabulary base uri identifies the 'namespace' which comprises its terms and,     by default, locates the schema declarations.</div></div><div class='slot'><div class='name'><a name='#resource-uri'>resource-uri</a></div>[t]<div class='documentation'>A vocabulary's resource is the URI location of its schema. If it is null, then the    vocabulary uri applies. The distinct values allow for cases where a base uri is redirected    to a concrete rdf document and that schema specifies the document as the 'isDefinedBy resource.    For example, 'http://zbw.eu/namespaces/zbw-extensions/', which describes the STW vocabulary.</div></div><div class='slot'><div class='name'><a name='#identifier-map'>identifier-map</a></div>[t]<div class='documentation'>An a-list of maps between model symbols and resource URI namestrings for the external     schema definition. The default value is derived from a combination of the vocabulary uri, the values of     the :identifiers and :identifier-map initialization arguments. The former is a list of symbols or     strings, of which the latter are interned in the respective package.</div></div><div class='slot'><div class='name'><a name='#definitions'>definitions</a></div>[t]</div><div class='slot'><div class='name'><a name='#documentation'>documentation</a></div>[t]</div></div></div><hr /><div class='method' name='vocabulary-package' ID='vocabulary-package'><div class='type'>Method</div><div class='name'>vocabulary-package   </div><div class='parameters'> (vocabulary vocabulary)</div><div class='documentation'></div></div><hr /><div class='method' name='(setf vocabulary-uri)' ID='(setf vocabulary-uri)'><div class='type'>Method</div><div class='name'><a href='../../../../../../../../#(setf vocabulary-uri)'>(setf vocabulary-uri)</a>   </div><div class='parameters'> (package package) (vocabulary vocabulary)</div><div class='documentation'></div></div><hr /></div><hr /><div class='footer'><div style='float: left;'><img src='http://www.digitool.com/img/mcl-made-1.gif' /></div><div style='float: right;'> Copyright 2010 setf.de</div></div></body></html>