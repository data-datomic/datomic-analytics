<?xml version='1.0' standalone='no' ?><!DOCTYPE xhtml PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns='http://www.w3.org/1999/xhtml'>  <head>   <meta name='date' content='20100625T034720' />       <meta http-equiv='Content-Type' content='text/xhtml;charset=iso-8859-1' />       <link href='../../../documentation.css' rel='stylesheet' type='text/css' />       <title>FILE: resource-object    </title>   </head><body><div class='file'><div class='type'>File</div><div class='name'>resource-object.lisp</div><hr /><div class='indexHeading'><span><a href='#index_B'>B</a> </span><span><a href='#index_E'>E</a> </span><span><a href='#index_F'>F</a> </span><span><a href='#index_H'>H</a> </span><span><a href='#index_M'>M</a> </span><span><a href='#index_P'>P</a> </span><span><a href='#index_Q'>Q</a> </span><span><a href='#index_R'>R</a> </span><span><a href='#index_S'>S</a> </span><span><a href='#index_U'>U</a> </span></div><hr /><div class='documentation'>This file defines model classes and operators for the `de.setf.resource` Common Lisp linked data library.</div><div class='documentation'><div class='name'><a href='#object-properties' style='margin-right: 0.5em'>object-properties </a></div></div><div class='documentation'><div class='name'><a href='#prototypal-property-value' style='margin-right: 0.5em'>prototypal-property-value </a></div></div><div class='documentation'>The resource-object class represents prototypal, ad-hoc properties as <a href='resource-class.xhtml#prototypal-property-definition' class='reference class'>prototypal-property-definition</a> instances. These are collected in the instance's properties slot. This is an on-demand hash-table managed by the object-properties reader. If no binding is found, by default, reads fail and writes augment the bindings.</div><hr /><div class='indexLetter'><a name='index_B'>B</a></div><div class='method' name='bound-property-value-using-class' ID='bound-property-value-using-class'><div class='type'>Method</div><div class='name'>bound-property-value-using-class   </div><div class='parameters'> (class resource-class) (object t) (predicate t)</div><div class='documentation'></div></div><hr /><div class='indexLetter'><a name='index_E'>E</a></div><div class='method' name='equal' ID='equal'><div class='type'>Method</div><div class='name'>equal   </div><div class='parameters'> (uri t) (object resource-object)</div><div class='documentation'>Given a resource-object and something else, the result is that for the instance's URI. This equates event two distinct resource-object instances which have equivalent URI</div></div><hr /><div class='indexLetter'><a name='index_F'>F</a></div><div class='method' name='(setf find-instance)' ID='(setf find-instance)'><div class='type'>Method</div><div class='name'><a href='../../../../../../../../#(setf find-instance)'>(setf find-instance)</a>   </div><div class='parameters'> (instance t) (object resource-object) (identifier t)</div><div class='documentation'></div></div><hr /><div class='indexLetter'><a name='index_H'>H</a></div><div class='method' name='has-statement?' ID='has-statement?'><div class='type'>Method</div><div class='name'><a href='interface.xhtml#has-statement?'>has-statement?</a>   </div><div class='parameters'> (object resource-object) (statement triple)</div><div class='documentation'></div></div><hr /><div class='method' name='has-subject?' ID='has-subject?'><div class='type'>Method</div><div class='name'><a href='interface.xhtml#has-subject?'>has-subject?</a>   </div><div class='parameters'> (object resource-object) (subject resource-object)</div><div class='documentation'></div></div><hr /><div class='indexLetter'><a name='index_M'>M</a></div><div class='method' name='map-property-predicates' ID='map-property-predicates'><div class='type'>Method</div><div class='name'><a href='interface.xhtml#map-property-predicates'>map-property-predicates</a>  progn </div><div class='parameters'> (function t) (object resource-object)</div><div class='documentation'>The base method for a resource <a href='interface.xhtml#object' class='reference function'>object</a> applies the operator to the <a href='interface.xhtml#predicate' class='reference function'>predicate</a> of each property slot definition.</div></div><hr /><div class='indexLetter'><a name='index_P'>P</a></div><div class='method' name='property-boundp' ID='property-boundp'><div class='type'>Method</div><div class='name'>property-boundp   </div><div class='parameters'> (object resource-object) (definition archetypal-property-definition)</div><div class='documentation'></div></div><hr /><div class='function'><a name='property-value'><div class='type'>Generic Function</div><div class='name'>property-value</div><div class='parameters'> object  predicate </div></a><div class='documentation'>Return the value associated with the object by the predicate. This devolves to a slot reference and signals a resource-missing error if the predicate is not related to the object.</div></div><hr /><div class='function'><a name='property-value-using-class'><div class='type'>Generic Function</div><div class='name'>property-value-using-class</div><div class='parameters'> class  resource-object  name </div></a><div class='documentation'>Given a CLASS a <a href='#resource-object' class='reference class'>RESOURCE-OBJECT</a> instance, and a predicate NAME, return the value bound in the instance context. If the predicate names an archetypal slot, this is equivalent to slot value, but in the predicate rather than the slot name namespace. Otherwise a bound prototypal property is sought and its value is returned. If no property exists, the base protocol invokes class' class-property-missing-function on the class, the instance, and the predicate name. The standard bindings invoke property-missing, which signals a property-missing-error.</div></div><hr /><div class='method' name='(setf property-value-using-class)' ID='(setf property-value-using-class)'><div class='type'>Method</div><div class='name'><a href='../../../../../../../../#(setf property-value-using-class)'>(setf property-value-using-class)</a>   </div><div class='parameters'> (new-value t) (class resource-class) (object t) (predicate t)</div><div class='documentation'></div></div><hr /><div class='method' name='property-value-using-class' ID='property-value-using-class'><div class='type'>Method</div><div class='name'><a href='#property-value-using-class'>property-value-using-class</a>   </div><div class='parameters'> (class resource-class) (object resource-object) (predicate t)</div><div class='documentation'>First, if the object is persistent, but uninitialized, load it's properties.     The locate an property definition - whether arcetypal or prototypal and return the value.     Absent a definition signal a <a href='utilities.xhtml#property-missing-error' class='reference class'>property-missing-error</a>.</div></div><hr /><div class='method' name='(setf prototypal-property-value)' ID='(setf prototypal-property-value)'><div class='type'>Method</div><div class='name'>(setf prototypal-property-value)   </div><div class='parameters'> (new-value t) (object resource-object) (definition rdf-prototypal-property-definition) &amp;optional (type (slot-definition-type definition))</div><div class='documentation'></div></div><hr /><div class='method' name='(setf prototypal-property-value)' ID='(setf prototypal-property-value)'><div class='type'>Method</div><div class='name'><a href='../../../../../../../../#(setf prototypal-property-value)'>(setf prototypal-property-value)</a>   </div><div class='parameters'> (new-value t) (object resource-object) (definition prototypal-property-definition) &amp;optional (type (slot-definition-type definition))</div><div class='documentation'>Given a specific property definition for an object and a NEW-VALUE, setf the property value.</div></div><hr /><div class='function'><a name='prototypal-property-value'><div class='type'>Generic Function</div><div class='name'>prototypal-property-value</div><div class='parameters'> resource-object  name  &amp;optional  type </div></a><div class='documentation'>Given a RESOURCE-OBJECT instance and a predicate NAME, return the prototypal property value. If none is bound, signal a continuable property-missing error to permit the application to furnish or create a property definition. Accept an optional TYPE to incorporate when instantiating a new property.</div></div><hr /><div class='indexLetter'><a name='index_Q'>Q</a></div><div class='method' name='query' ID='query'><div class='type'>Method</div><div class='name'>query   </div><div class='parameters'> (context resource-object) &amp;key subject predicate object graph continuation</div><div class='documentation'></div></div><hr /><div class='indexLetter'><a name='index_R'>R</a></div><div class='method' name='repository-register' ID='repository-register'><div class='type'>Method</div><div class='name'>repository-register   </div><div class='parameters'> (source resource-mediator) (object resource-object)</div><div class='documentation'></div></div><hr /><div class='class'><a name='resource-object'><div class='type'>Class</div><div class='name'>resource-object</div><div class='superclasses'>( standard-object )</div></a><div class='documentation'>The resource-object class describes the abstract features of 'resource' linked data entities. Each object comprises an identifier - either a symbol or a UUID, a repository source -either directly, or by delegation through its class, a complement of archetypal properties and a complement of prototypal properties. Archetypal properties are those slots for which a datatype or a predicate is declared. Prototypal properties are those additional values which are associated with an instance through a property accessor or projected on to the instance from a repository. In addition to the instance's owned properties, each instance is associated with a repository datatype, and as a default, a repository by delegation to its class.  When operated on in the context of a transaction, a <a href='#resource-object' class='reference class'>resource-object</a> instance retains an history which can be used to effect a roll-back or to purge obsolete assersions from its repository. As the class is an abstract-resource-class, it is intended to be specialized rather than instantiated. See the resource class for the most general concrete class.</div><div class='slots'><div class='slot'><div class='name'><a name='#uri'>uri</a></div>[(or uuid symbol)]</div><div class='slot'><div class='name'><a name='#source'>source</a></div>[t]<div class='documentation'>Binds the source for the instance. The default is the class source.</div></div><div class='slot'><div class='name'><a name='#state'>state</a></div>[t]<div class='documentation'>Records the instance lifecycle state. Initially :<a href='utilities.xhtml#transient' class='reference class'>transient</a>. If it is created as a     consequence of a <a href='utilities.xhtml#persistent' class='reference class'>persistent</a> reference, that is changed to :<a href='utilities.xhtml#hollow' class='reference class'>hollow</a>. a persistent-new reference propagates.     Any :<a href='utilities.xhtml#hollow' class='reference class'>hollow</a> access causes a transition to the respective <a href='utilities.xhtml#modified' class='reference class'>modified</a> state. Write access causes it to become     <a href='utilities.xhtml#modified' class='reference class'>modified</a>. Read acess on a <a href='utilities.xhtml#transient' class='reference class'>transient</a> or <a href='utilities.xhtml#new' class='reference class'>new</a> unbound slot fails. make-object-persistent,     make-object-transient, and delete-object cause transitions between the realms for autonomous instances.     Transaction completion synchronizes any <a href='utilities.xhtml#persistent' class='reference class'>persistent</a> objects with the database. It examines each object     created in the transaction, synchronizes all <a href='utilities.xhtml#persistent' class='reference class'>persistent</a> ones and each object reachable from one. Any     reachable transents are changed to <a href='utilities.xhtml#persistent' class='reference class'>persistent</a>.     see [JDO](http://www.jpox.org/docs/jdo/jdo_state_transition.html).</div></div><div class='slot'><div class='name'><a name='#graph'>graph</a></div>[t]<div class='documentation'>Specifies the individual graph, within the object's source, which comprises the object's      description. The default value is NIL.</div></div><div class='slot'><div class='name'><a name='#history'>history</a></div>[t]<div class='documentation'>Records the persistent property changes during a transaction.</div></div><div class='slot'><div class='name'><a name='#properties'>properties</a></div>[(or null hash-table)]<div class='documentation'>Bind the property-slot-definition metaobjects which bind non-slot properties for     structural variations and prototypes.</div></div></div></div><hr /><div class='function'><a name='retain-values?'><div class='type'>Generic Function</div><div class='name'>retain-values?</div><div class='parameters'> resource </div></a><div class='documentation'>Return true iff the resource should retain property values subsequent to having been evicted from a transaction. The default value is NIL.</div></div><hr /><div class='indexLetter'><a name='index_S'>S</a></div><div class='method' name='shared-initialize' ID='shared-initialize'><div class='type'>Method</div><div class='name'>shared-initialize  :after </div><div class='parameters'> (instance resource-object) (slots t) &amp;key properties</div><div class='documentation'>If a list of properties is provided when (re)initializing a resource-object, bind them to the respective predicates in the instance. Any un-named previous bindings will remain.</div></div><hr /><div class='method' name='store-value' ID='store-value'><div class='type'>Method</div><div class='name'><a href='interface.xhtml#store-value'>store-value</a>  :around </div><div class='parameters'> (source resource-mediator) (object resource-object)</div><div class='documentation'>In the context of a repository, a resource-object is identified with its URI. This is present as an :around method to delegate immediately to the <a href='interface.xhtml#uri' class='reference function'>URI</a> in order that it appear in the repositories cache in relation to the concrete <a href='interface.xhtml#store-value' class='reference function'>store-value</a>.</div></div><hr /><div class='indexLetter'><a name='index_U'>U</a></div><div class='method' name='unbind-property-slots' ID='unbind-property-slots'><div class='type'>Method</div><div class='name'><a href='interface.xhtml#unbind-property-slots'>unbind-property-slots</a>  progn </div><div class='parameters'> (object resource-object)</div><div class='documentation'>The base method for the unbinding operator removes property slot definitions except for those which bind internal properties.</div></div><hr /></div><hr /><div class='footer'><div style='float: left;'><img src='http://www.digitool.com/img/mcl-made-1.gif' /></div><div style='float: right;'> Copyright 2010 setf.de</div></div></body></html>