<?xml version='1.0' standalone='no' ?><!DOCTYPE xhtml PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns='http://www.w3.org/1999/xhtml'>  <head>   <meta name='date' content='20100724T124745' />       <meta http-equiv='Content-Type' content='text/xhtml;charset=iso-8859-1' />       <link href='../../../documentation.css' rel='stylesheet' type='text/css' />       <title>FILE: column-family    </title>   </head><body><div class='file'><div class='type'>File</div><div class='name'>column-family.lisp</div><hr /><div class='indexHeading'><span><a href='#index_A'>A</a> </span><span><a href='#index_C'>C</a> </span><span><a href='#index_G'>G</a> </span><span><a href='#index_I'>I</a> </span><span><a href='#index_S'>S</a> </span></div><hr /><div class='indexLetter'><a name='index_A'>A</a></div><div class='class'><a name='abstract-column-family'><div class='type'>Class</div><div class='name'>abstract-column-family</div><div class='superclasses'>( standard-object )</div></a><div class='documentation'>The abstract class defines the slots shared by the <a href='#column-family' class='reference class'>column-family</a> and super-column-family classes to bind the store <a href='keyspace.xhtml#keyspace' class='reference function'>keyspace</a>, the family name and the structs and parameters used in access operations.</div><div class='slots'><div class='slot'><div class='name'><a name='#keyspace'>keyspace</a></div>[keyspace]<div class='documentation'>The column's keyspace instance. All operations are delegated through this <a href='keyspace.xhtml#keyspace' class='reference class'>keyspace</a>     to the respective store.</div></div><div class='slot'><div class='name'><a name='#name'>name</a></div>[t]<div class='documentation'>The column family name.[http://wiki.apache.org/cassandra/DataModel#Column_Families].</div></div><div class='slot'><div class='name'><a name='#slice-size'>slice-size</a></div>[i32]<div class='documentation'>The default count to use for retrieval operations which return multiple values.      If no value is provided, the default is adopted from the column family's key space.</div></div><div class='slot'><div class='name'><a name='#columnpath'>columnpath</a></div>[t]<div class='documentation'>A cached column path[http://wiki.apache.org/cassandra/API#ColumnPath] to be used     for access operations. The super_column or column field is used as appropriate for the context.</div></div><div class='slot'><div class='name'><a name='#columnparent'>columnparent</a></div>[t]<div class='documentation'>A cached column parent[http://wiki.apache.org/cassandra/API#ColumnParent] to be used     for access operations.</div></div><div class='slot'><div class='name'><a name='#slicepredicate'>slicepredicate</a></div>[t]<div class='documentation'>A cached slice predicate[http://wiki.apache.org/cassandra/API#SlicePredicate] to be used     for access operations. The column_names or slice_range field is set as appropraite for the operation     arguments.</div></div><div class='slot'><div class='name'><a name='#slicerange'>slicerange</a></div>[t]<div class='documentation'>A cachedslice range[http://wiki.apache.org/cassandra/API#SliceRange] to be used together     with the slice predicate for access operations which specify a key range.</div></div></div></div><hr /><div class='function'><a name='attribute-value'><div class='type'>Generic Function</div><div class='name'>attribute-value</div><div class='parameters'> column-family  key  column-name </div></a><div class='documentation'></div></div><hr /><div class='method' name='(setf attribute-value)' ID='(setf attribute-value)'><div class='type'>Method</div><div class='name'>(setf attribute-value)   </div><div class='parameters'> (value t) (column-family column-family) (key t) (column-name t)</div><div class='documentation'></div></div><hr /><div class='function'><a name='attribute-values'><div class='type'>Generic Function</div><div class='name'>attribute-values</div><div class='parameters'> column-family  key  &amp;key  start  finish  column-names  reversed  count </div></a><div class='documentation'></div></div><hr /><div class='method' name='(setf attribute-values)' ID='(setf attribute-values)'><div class='type'>Method</div><div class='name'>(setf attribute-values)   </div><div class='parameters'> (values t) (column-family column-family) (key t) &amp;key column-names</div><div class='documentation'></div></div><hr /><div class='indexLetter'><a name='index_C'>C</a></div><div class='class'><a name='column-family'><div class='type'>Class</div><div class='name'>column-family</div><div class='superclasses'>( abstract-column-family )</div></a><div class='documentation'>A column-family represents a single-level cassandra hash.</div><div class='slots'></div></div><hr /><div class='indexLetter'><a name='index_G'>G</a></div><div class='function'><a name='get-attribute'><div class='type'>Generic Function</div><div class='name'>get-attribute</div><div class='parameters'> column-family  key  column-name </div></a><div class='documentation'>Given a COLUMN-FAMILY, KEY, and COLUMN-NAME, retrieve the designated attribute value from the family's store. This retrieves the attribute 'column' and returns just its value.</div></div><hr /><div class='method' name='get-attribute' ID='get-attribute'><div class='type'>Method</div><div class='name'><a href='#get-attribute'>get-attribute</a>   </div><div class='parameters'> (column-family abstract-column-family) (key t) (column-name t)</div><div class='documentation'></div></div><hr /><div class='function'><a name='get-attributes'><div class='type'>Generic Function</div><div class='name'>get-attributes</div><div class='parameters'> column-family  key  &amp;key  start  finish  column-names  reversed  count </div></a><div class='documentation'>Given a COLUMN-FAMILY, a KEY, and constraints as for get-attributes, retrieve the attribute 'columns' and of those the respective values.</div></div><hr /><div class='method' name='get-attributes' ID='get-attributes'><div class='type'>Method</div><div class='name'><a href='#get-attributes'>get-attributes</a>   </div><div class='parameters'> (column-family abstract-column-family) (key t) &amp;rest args</div><div class='documentation'></div></div><hr /><div class='method' name='get-column' ID='get-column'><div class='type'>Method</div><div class='name'><a href='#get-column'>get-column</a>   </div><div class='parameters'> (family super-column-family) (keys cons) (column-name t)</div><div class='documentation'></div></div><hr /><div class='function'><a name='get-column'><div class='type'>Generic Function</div><div class='name'>get-column</div><div class='parameters'> column-family  key  column-name </div></a><div class='documentation'>Given a COLUMN-FAMILY, KEY, and COLUMN-NAME, retrieve the designated attribute 'column' from the family's store. This returns the column struct, which comprises the name, value, and timestamp. A simple <a href='#column-family' class='reference class'>column-family</a> requires atomic keys, while a super-column permits either the atomic family key or a list of family-key and super-column key.</div></div><hr /><div class='method' name='get-columns' ID='get-columns'><div class='type'>Method</div><div class='name'><a href='#get-columns'>get-columns</a>   </div><div class='parameters'> (family super-column-family) (key t) &amp;key (start ) (finish ) column-names reversed (count (column-family-slice-size family))</div><div class='documentation'></div></div><hr /><div class='function'><a name='get-columns'><div class='type'>Generic Function</div><div class='name'>get-columns</div><div class='parameters'> column-family  key  &amp;key  start  finish  column-names  reversed  count </div></a><div class='documentation'>Given a COLUMN-FAMILY, KEY, and a combination of START and FINISH column names, a COLUMN-NAME list, REVERSED indicator, and a COUNT, retrieve the designated attribute 'columns' from the  family's store. (see cassandra:get-silce.) A simple column-family requires atomic an key, while a super-column permits either the atomic family key or a list of family-key and super-column key.</div></div><hr /><div class='indexLetter'><a name='index_I'>I</a></div><div class='method' name='initialize-instance' ID='initialize-instance'><div class='type'>Method</div><div class='name'>initialize-instance  :after </div><div class='parameters'> (instance abstract-column-family) &amp;key (slice-size (keyspace-slice-size (column-family-keyspace instance)))</div><div class='documentation'></div></div><hr /><div class='method' name='insert' ID='insert'><div class='type'>Method</div><div class='name'><a href='api.xhtml#insert'>insert</a>   </div><div class='parameters'> (column-family column-family) &amp;rest args &amp;key key column super-column &amp;allow-other-keys</div><div class='documentation'></div></div><hr /><div class='indexLetter'><a name='index_S'>S</a></div><div class='method' name='set-attribute' ID='set-attribute'><div class='type'>Method</div><div class='name'><a href='#set-attribute'>set-attribute</a>   </div><div class='parameters'> (family super-column-family) (keys cons) (column-name t) (column-value t) &amp;optional (timestamp (get-timestamp))</div><div class='documentation'></div></div><hr /><div class='function'><a name='set-attribute'><div class='type'>Generic Function</div><div class='name'>set-attribute</div><div class='parameters'> column-family  key  column-name  value  &amp;optional  timestamp </div></a><div class='documentation'>Given a COLUMN-FAMILY, KEY, COLUMN-NAME, VALUE, and an optional TIMESTAMP, store the designated attribute 'column' in the family's store. The timestamp defaults to the UUID-V1 timestamp. A simple column-family requires atomic keys, while a super-column requires a list of family-key and super-column key.</div></div><hr /><div class='method' name='set-attributes' ID='set-attributes'><div class='type'>Method</div><div class='name'><a href='#set-attributes'>set-attributes</a>   </div><div class='parameters'> (family super-column-family) (keys cons) &amp;rest property-list</div><div class='documentation'></div></div><hr /><div class='function'><a name='set-attributes'><div class='type'>Generic Function</div><div class='name'>set-attributes</div><div class='parameters'> column-family  key  &amp;rest  property-list </div></a><div class='documentation'>Given a COLUMN-FAMILY, a key, and a property list of column names and values, store the designated attribute 'columns' in the family's store. The first property can be :timestamp, to specify the column timestamp, for which the default is the UUID-V1 timestamp.</div></div><hr /><div class='class'><a name='super-column-family'><div class='type'>Class</div><div class='name'>super-column-family</div><div class='superclasses'>( abstract-column-family )</div></a><div class='documentation'>A super-column-family represents a two-level cassandra hash.</div><div class='slots'></div></div><hr /></div><hr /><div class='footer'><div style='float: left;'><img src='http://www.digitool.com/img/mcl-made-1.gif' /></div><div style='float: right;'> Copyright 2010 setf.de</div></div></body></html>